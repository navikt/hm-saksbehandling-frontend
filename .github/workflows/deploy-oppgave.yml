name: Build, deploy to dev-gcp
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
    branches:
      - bestillingsordning
env:
  IMAGE: 'ghcr.io/navikt/hotsak-frontend:${{ github.sha }}'

jobs:

  test:
    name: Run Cypress tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm run dev
          wait-on: 'http://localhost:3001'
          working-directory: client

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
      - uses: actions/checkout@v1
        name: Checkout code
      - name: Cache node deps
        id: cache-node
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: set timezone
        run: export TZ=utc
      - name: top level install
        run: npm install -ws false
      - name: install frontend deps
        run: npm install -ws false --prefix client
      - name: install server deps
        run: npm install -ws false --prefix server
      #- name: validate ts
      #  run: npm run validate-ts
      - name: build bundle
        run: npm run build
      #- name: run e2e-test
      #  run: npm run e2e-test
      #- name: Archive Cypress artifacts
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: videos
      #    path: e2e-tests/cypress/videos
      - name: pre-deploy
        uses: navikt/digihot-deploy/actions/pre-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_IMAGE: ghcr.io/navikt/hotsak-frontend
      - name: build docker image
        run: |
          npm prune --production --workspaces
          docker build . -t $IMAGE
      - name: push docker image
        run: |
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push $IMAGE
        #run: |
        #  echo "$GITHUB_TOKEN" | docker login --username "$GITHUB_REPOSITORY" --password-stdin ghcr.io
        #  docker push ${{ env.IMAGE }}:${{ needs.set_version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev-oppgave.yaml
          VAR: image=${{ env.IMAGE }}