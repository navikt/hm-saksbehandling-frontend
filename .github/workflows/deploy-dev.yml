name: Bygg, deploy til dev-gcp og lag release

on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
    branches:
      - main
      - version-tag

jobs:

  test:
    name: KjÃ¸r Cypress-tester
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          wait-on: 'http://ip6-localhost:3001'
          working-directory: client
          config-file: cypress.config.ts
          record: false

  build:
    name: Bygg
    permissions:
      packages: write
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      docker_image: ${{ steps.docker-build-push.outputs.image }}
      version_tag: ${{ steps.version-tag.outputs.VERSION_TAG}}
    steps:
      - uses: actions/checkout@v4
      - uses: navikt/digihot-deploy/actions/pre-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdigihot
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: ${{ env.VERSION_TAG }}
      - id: version-tag
        run: echo "VERSION_TAG=${{env.VERSION_TAG}}" >> "$GITHUB_OUTPUT"

  deploy-labs:
    name: Deploy til labs-gcp
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
            CLUSTER: dev-gcp
            RESOURCE: .nais/labs.yaml
            IMAGE: ${{ needs.build.outputs.docker_image }}
  
  deploy-dev:
    name: Deploy til dev-gcp
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
      id-token: write
    timeout-minutes: 15
    env:
      VERSION_TAG: ${{ needs.build.outputs.version_tag }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "Using VERSION_TAG ${{ env.VERSION_TAG }}"
      - uses: nais/deploy/actions/deploy@v2
        env:
            CLUSTER: dev-gcp
            RESOURCE: .nais/dev.yaml
            IMAGE: ${{ needs.build.outputs.docker_image }}
      - name: post-deploy
        if: github.ref == 'refs/heads/main'
        uses: navikt/digihot-deploy/actions/post-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false
