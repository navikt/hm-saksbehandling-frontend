name: Build, deploy to dev-gcp
on:
  push:
    paths-ignore:
        - "**.md"
        - ".gitignore"
        - "LICENCE"
        - "CODEOWNERS"
    branches:
      - main
env:
  IMAGE: "ghcr.io/navikt/hm-saksbehandling-frontend:${{ github.sha }}"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "14"
      - uses: actions/checkout@v1
        name: Checkout code
      - name: Cache node deps
        id: cache-node
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: set timezone
        run: export TZ=utc
      - name: top level install 
        run: npm install
      - name: install frontend deps
        run: npm install --prefix client
      - name: install server deps
        run: npm install --prefix server
      #- name: validate ts
      #  run: npm run validate-ts
      - name: build bundle
        run: npm run build
      #- name: run e2e-test
      #  run: npm run e2e-test
      #- name: Archive Cypress artifacts
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: videos
      #    path: e2e-tests/cypress/videos
      - name: build docker image
        run: |
          npm prune --production
          docker build . --pull -t ${{ env.IMAGE }}
      - name: push docker image
        run: |
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push $IMAGE
        #run: |
        #  echo "$GITHUB_TOKEN" | docker login --username "$GITHUB_REPOSITORY" --password-stdin ghcr.io
        #  docker push ${{ env.IMAGE }}:${{ needs.set_version.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deployDev:
    name: Deploy to dev
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev.yaml
  
  deployLabs:
    name: Deploy to lakvs
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: .nais/labs.yaml
